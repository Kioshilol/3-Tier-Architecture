// <auto-generated />
using System;
using DLayer.EFContext.EfEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DLayer.EFContext.Migrations
{
    [DbContext(typeof(TrainingTaskContext))]
    [Migration("20190726152758_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DLayer.Entities.Employee", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<string>("SecondName")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DLayer.Entities.EmployeeTasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StaffId");

                    b.Property<int?>("TaskId");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("TaskId");

                    b.ToTable("EmployeeTasks");
                });

            modelBuilder.Entity("DLayer.Entities.Project", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("ShortName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("DLayer.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfEnd")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfStart")
                        .HasColumnType("date");

                    b.Property<int?>("EmployeeId");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("ProjectId");

                    b.Property<long>("TaskTime")
                        .HasMaxLength(50);

                    b.Property<int>("TypeStatus")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("DLayer.Entities.EmployeeTasks", b =>
                {
                    b.HasOne("DLayer.Entities.Employee", "Staff")
                        .WithMany("StaffTasks")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffTasks_Staff");

                    b.HasOne("DLayer.Entities.Task", "Task")
                        .WithMany("StaffTasks")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_StaffTasks_Task");
                });

            modelBuilder.Entity("DLayer.Entities.Task", b =>
                {
                    b.HasOne("DLayer.Entities.Employee")
                        .WithMany("TaskList")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("DLayer.Entities.Project", "Project")
                        .WithMany("Task")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Task_Project")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
